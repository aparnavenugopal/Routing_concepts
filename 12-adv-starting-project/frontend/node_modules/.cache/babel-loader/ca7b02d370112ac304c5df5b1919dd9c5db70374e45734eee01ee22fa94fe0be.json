{"ast":null,"code":"var _jsxFileName = \"/Users/aparna/Documents/projects/epam_interview_projects/Routing_concepts/12-adv-starting-project/frontend/src/pages/Events.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport EventsList from '../components/EventsList';\nimport { useLoaderData } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const events = useLoaderData();\n  if (events.isError) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: events.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventsList, {\n      events: events\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(EventsPage, \"0qsQ0LJMbp4ZAcOenpedLepO/y4=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nexport async function loader() {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    // return {isError: true, message:'could not fetch events'}\n    throw {\n      message: 'could not fetch events'\n    };\n  } else {\n    const resData = await response.json();\n    return resData.events;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["useEffect","useState","EventsList","useLoaderData","jsxDEV","_jsxDEV","Fragment","_Fragment","EventsPage","_s","events","isError","children","message","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","response","fetch","ok","resData","json","$RefreshReg$"],"sources":["/Users/aparna/Documents/projects/epam_interview_projects/Routing_concepts/12-adv-starting-project/frontend/src/pages/Events.js"],"sourcesContent":["import { useEffect, useState } from 'react';\n\nimport EventsList from '../components/EventsList';\nimport { useLoaderData } from 'react-router-dom';\n\nfunction EventsPage() {\n  const events = useLoaderData();\n\n  if(events.isError){\n    return <p>{events.message}</p>\n  }\n  \n \n  return (\n    <>\n      <EventsList events={events} />\n    </>\n  );\n}\n\nexport default EventsPage;\n\nexport async function loader(){\n    const response = await fetch('http://localhost:8080/events');\n    if(!response.ok){\n      // return {isError: true, message:'could not fetch events'}\n      throw { message: 'could not fetch events'}\n    }else{\n     const resData = await response.json();\n     return resData.events;\n    }\n }\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAASC,aAAa,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEjD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAMC,MAAM,GAAGP,aAAa,CAAC,CAAC;EAE9B,IAAGO,MAAM,CAACC,OAAO,EAAC;IAChB,oBAAON,OAAA;MAAAO,QAAA,EAAIF,MAAM,CAACG;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAChC;EAGA,oBACEZ,OAAA,CAAAE,SAAA;IAAAK,QAAA,eACEP,OAAA,CAACH,UAAU;MAACQ,MAAM,EAAEA;IAAO;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,gBAC9B,CAAC;AAEP;AAACR,EAAA,CAbQD,UAAU;EAAA,QACFL,aAAa;AAAA;AAAAe,EAAA,GADrBV,UAAU;AAenB,eAAeA,UAAU;AAEzB,OAAO,eAAeW,MAAMA,CAAA,EAAE;EAC1B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAC5D,IAAG,CAACD,QAAQ,CAACE,EAAE,EAAC;IACd;IACA,MAAM;MAAET,OAAO,EAAE;IAAwB,CAAC;EAC5C,CAAC,MAAI;IACJ,MAAMU,OAAO,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;IACrC,OAAOD,OAAO,CAACb,MAAM;EACtB;AACH;AAAC,IAAAQ,EAAA;AAAAO,YAAA,CAAAP,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}