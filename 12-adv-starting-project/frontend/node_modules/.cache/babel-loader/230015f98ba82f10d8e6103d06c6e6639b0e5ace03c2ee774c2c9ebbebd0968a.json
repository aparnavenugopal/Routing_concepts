{"ast":null,"code":"var _jsxFileName = \"/Users/aparna/Documents/projects/epam_interview_projects/Routing_concepts/12-adv-starting-project/frontend/src/App.js\";\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nimport { createBrowserRouter, RouterProvider } from 'react-router-dom';\nimport Root from './pages/Root';\nimport Error from './pages/Error';\nimport HomePage from './pages/Home';\nimport EventsPage, { loader as eventsLoader } from './pages/Events';\nimport EventDetailPage, { loader as eventDetailLoader } from './pages/EventDetail';\nimport NewEventPage from './pages/NewEvent';\nimport EditEventPage, { loader as editLoader } from './pages/EditEvent';\nimport EventsRootPage from './pages/EventsRoot';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst router = createBrowserRouter([{\n  path: '/',\n  element: /*#__PURE__*/_jsxDEV(Root, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 13\n  }, this),\n  errorElement: /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 19\n  }, this),\n  children: [{\n    index: true,\n    path: \"/\",\n    element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 40\n    }, this)\n  }, {\n    path: \"events\",\n    element: /*#__PURE__*/_jsxDEV(EventsRootPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this),\n    children: [{\n      index: true,\n      path: \"\",\n      element: /*#__PURE__*/_jsxDEV(EventsPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 44\n      }, this),\n      loader: eventsLoader\n    }, {\n      path: \":eventId\",\n      element: /*#__PURE__*/_jsxDEV(EventDetailPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 39\n      }, this),\n      loader: eventDetailLoader\n    }, {\n      path: \"new\",\n      element: /*#__PURE__*/_jsxDEV(NewEventPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 33\n      }, this)\n    }, {\n      path: \":eventId/edit\",\n      element: /*#__PURE__*/_jsxDEV(EditEventPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 43\n      }, this),\n      loader: editLoader\n    }]\n  }]\n}]);\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["createBrowserRouter","RouterProvider","Root","Error","HomePage","EventsPage","loader","eventsLoader","EventDetailPage","eventDetailLoader","NewEventPage","EditEventPage","editLoader","EventsRootPage","jsxDEV","_jsxDEV","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","errorElement","children","index","App","_c","$RefreshReg$"],"sources":["/Users/aparna/Documents/projects/epam_interview_projects/Routing_concepts/12-adv-starting-project/frontend/src/App.js"],"sourcesContent":["// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nimport { createBrowserRouter, RouterProvider } from 'react-router-dom';\nimport Root from './pages/Root';\nimport Error from './pages/Error';\nimport HomePage from './pages/Home';\nimport EventsPage,{ loader as eventsLoader} from './pages/Events';\nimport EventDetailPage,{ loader as eventDetailLoader} from './pages/EventDetail';\nimport NewEventPage from './pages/NewEvent';\nimport EditEventPage,{ loader as editLoader} from './pages/EditEvent';\nimport EventsRootPage from './pages/EventsRoot';\n\nconst router = createBrowserRouter([\n  {\n    path:'/',\n    element:<Root/>,\n    errorElement: <Error/>,\n    children: [\n       { index:true,path:\"/\", element: <HomePage/>},\n       { \n        path:\"events\", \n        element:<EventsRootPage/>,\n        children:[\n          { index: true, path:\"\", element: <EventsPage/>, loader: eventsLoader },\n          { path:\":eventId\", element: <EventDetailPage/>, loader:eventDetailLoader},\n          { path:\"new\", element:<NewEventPage/> },\n          { path:\":eventId/edit\", element:<EditEventPage/>, loader:editLoader},\n        ]\n      },\n\n    ]\n  }\n])\n\nfunction App() {\n  return (\n    <RouterProvider router={router}>\n\n    </RouterProvider>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,mBAAmB,EAAEC,cAAc,QAAQ,kBAAkB;AACtE,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,KAAK,MAAM,eAAe;AACjC,OAAOC,QAAQ,MAAM,cAAc;AACnC,OAAOC,UAAU,IAAGC,MAAM,IAAIC,YAAY,QAAO,gBAAgB;AACjE,OAAOC,eAAe,IAAGF,MAAM,IAAIG,iBAAiB,QAAO,qBAAqB;AAChF,OAAOC,YAAY,MAAM,kBAAkB;AAC3C,OAAOC,aAAa,IAAGL,MAAM,IAAIM,UAAU,QAAO,mBAAmB;AACrE,OAAOC,cAAc,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,MAAM,GAAGhB,mBAAmB,CAAC,CACjC;EACEiB,IAAI,EAAC,GAAG;EACRC,OAAO,eAACH,OAAA,CAACb,IAAI;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;EACfC,YAAY,eAAER,OAAA,CAACZ,KAAK;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;EACtBE,QAAQ,EAAE,CACP;IAAEC,KAAK,EAAC,IAAI;IAACR,IAAI,EAAC,GAAG;IAAEC,OAAO,eAAEH,OAAA,CAACX,QAAQ;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC,CAAC,EAC5C;IACCL,IAAI,EAAC,QAAQ;IACbC,OAAO,eAACH,OAAA,CAACF,cAAc;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;IACzBE,QAAQ,EAAC,CACP;MAAEC,KAAK,EAAE,IAAI;MAAER,IAAI,EAAC,EAAE;MAAEC,OAAO,eAAEH,OAAA,CAACV,UAAU;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;MAAEhB,MAAM,EAAEC;IAAa,CAAC,EACtE;MAAEU,IAAI,EAAC,UAAU;MAAEC,OAAO,eAAEH,OAAA,CAACP,eAAe;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;MAAEhB,MAAM,EAACG;IAAiB,CAAC,EACzE;MAAEQ,IAAI,EAAC,KAAK;MAAEC,OAAO,eAACH,OAAA,CAACL,YAAY;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAE,CAAC,EACvC;MAAEL,IAAI,EAAC,eAAe;MAAEC,OAAO,eAACH,OAAA,CAACJ,aAAa;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;MAAEhB,MAAM,EAACM;IAAU,CAAC;EAExE,CAAC;AAGL,CAAC,CACF,CAAC;AAEF,SAASc,GAAGA,CAAA,EAAG;EACb,oBACEX,OAAA,CAACd,cAAc;IAACe,MAAM,EAAEA;EAAO;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEf,CAAC;AAErB;AAACK,EAAA,GANQD,GAAG;AAQZ,eAAeA,GAAG;AAAC,IAAAC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}