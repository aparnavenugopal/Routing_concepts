{"ast":null,"code":"var _jsxFileName = \"/Users/aparna/Documents/projects/epam_interview_projects/Routing_concepts/12-adv-starting-project/frontend/src/pages/Events.js\",\n  _s = $RefreshSig$();\nimport { Suspense, useEffect, useState } from 'react';\nimport EventsList from '../components/EventsList';\nimport { useLoaderData, json, defer, Await } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const {\n    events\n  } = useLoaderData();\n\n  // if(events.isError){\n  //   return <p>{events.message}</p>\n  // }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Suspense, {\n      children: /*#__PURE__*/_jsxDEV(Await, {\n        resolve: events,\n        children: loadedEvents => /*#__PURE__*/_jsxDEV(EventsList, {\n          events: loadedEvents\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 30\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(EventsPage, \"xTcuS98fsVcq20se00iLm8bDBmQ=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nasync function loadEvents() {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    // return {isError: true, message:'could not fetch events'}\n    // throw new Response(JSON.stringify({ message: 'could not fetch events'}),{\n    //   status: 500\n    // });\n    return json({\n      message: 'could not fetch events'\n    }, {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.events;\n  }\n}\nexport function loader() {\n  defer({\n    events: loadEvents()\n  });\n}\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["Suspense","useEffect","useState","EventsList","useLoaderData","json","defer","Await","jsxDEV","_jsxDEV","Fragment","_Fragment","EventsPage","_s","events","children","resolve","loadedEvents","fileName","_jsxFileName","lineNumber","columnNumber","_c","loadEvents","response","fetch","ok","message","status","resData","loader","$RefreshReg$"],"sources":["/Users/aparna/Documents/projects/epam_interview_projects/Routing_concepts/12-adv-starting-project/frontend/src/pages/Events.js"],"sourcesContent":["import { Suspense, useEffect, useState } from 'react';\n\nimport EventsList from '../components/EventsList';\nimport { useLoaderData, json, defer, Await } from 'react-router-dom';\n\nfunction EventsPage() {\n  const { events } = useLoaderData();\n\n  // if(events.isError){\n  //   return <p>{events.message}</p>\n  // }\n  \n \n  return (\n    <>\n      {/* <EventsList events={events} /> */}\n      <Suspense>\n        <Await resolve={events}>\n          {(loadedEvents) => <EventsList events={loadedEvents}/>}\n        </Await>\n      </Suspense>\n     \n    </>\n  );\n}\n\nexport default EventsPage;\n\nasync function loadEvents(){\n  const response = await fetch('http://localhost:8080/events');\n  if(!response.ok){\n    // return {isError: true, message:'could not fetch events'}\n    // throw new Response(JSON.stringify({ message: 'could not fetch events'}),{\n    //   status: 500\n    // });\n    return json({ message:'could not fetch events'},{\n      status : 500\n    });\n  }else{\n   const resData = await response.json();\n   return resData.events;\n  }\n}\n\nexport  function loader(){\n    defer({\n      events: loadEvents(),\n    })\n }\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAErD,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAASC,aAAa,EAAEC,IAAI,EAAEC,KAAK,EAAEC,KAAK,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAErE,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM;IAAEC;EAAO,CAAC,GAAGV,aAAa,CAAC,CAAC;;EAElC;EACA;EACA;;EAGA,oBACEK,OAAA,CAAAE,SAAA;IAAAI,QAAA,eAEEN,OAAA,CAACT,QAAQ;MAAAe,QAAA,eACPN,OAAA,CAACF,KAAK;QAACS,OAAO,EAAEF,MAAO;QAAAC,QAAA,EACnBE,YAAY,iBAAKR,OAAA,CAACN,UAAU;UAACW,MAAM,EAAEG;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC,gBAEX,CAAC;AAEP;AAACR,EAAA,CAnBQD,UAAU;EAAA,QACER,aAAa;AAAA;AAAAkB,EAAA,GADzBV,UAAU;AAqBnB,eAAeA,UAAU;AAEzB,eAAeW,UAAUA,CAAA,EAAE;EACzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAC5D,IAAG,CAACD,QAAQ,CAACE,EAAE,EAAC;IACd;IACA;IACA;IACA;IACA,OAAOrB,IAAI,CAAC;MAAEsB,OAAO,EAAC;IAAwB,CAAC,EAAC;MAC9CC,MAAM,EAAG;IACX,CAAC,CAAC;EACJ,CAAC,MAAI;IACJ,MAAMC,OAAO,GAAG,MAAML,QAAQ,CAACnB,IAAI,CAAC,CAAC;IACrC,OAAOwB,OAAO,CAACf,MAAM;EACtB;AACF;AAEA,OAAQ,SAASgB,MAAMA,CAAA,EAAE;EACrBxB,KAAK,CAAC;IACJQ,MAAM,EAAES,UAAU,CAAC;EACrB,CAAC,CAAC;AACL;AAAC,IAAAD,EAAA;AAAAS,YAAA,CAAAT,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}